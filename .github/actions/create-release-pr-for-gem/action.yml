name: Create Release PR for Gem
description: Create a pull request for releasing a new version of a gem.
inputs:
  base-branch:
    required: true
    description: The base branch
  version-file-path:
    required: true
    description: The path to the version file. ex. ./lib/my_gem/version.rb
  version-module-name:
    required: true
    description: Gem module name. ex. MyGem
  commit-user-email:
    description: The email address of the user who created the commit
    default: "41898282+github-actions[bot]@users.noreply.github.com"
  commit-user-name:
    description: The name of the user who created the commit
    default: "github-actions[bot]"

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
        ref: ${{ inputs.base-branch }}
    - name: Conventional Changelog Action
      id: changelog
      uses: TriPSs/conventional-changelog-action@v5
      with:
        preset: conventionalcommits
        skip-version-file: true
        output-file: false
        git-branch: ${{ inputs.base-branch }}
        git-push: false
        skip-commit: true
        skip-tag: true
        github-token: ${{ env.GITHUB_TOKEN  }}
    - name: Commit version up commit
      if: ${{ steps.changelog.outputs.skipped == 'false' }}
      env:
        VERSION: ${{ steps.changelog.outputs.version }}
      run: |
        git config --local user.email "${{ inputs.commit-user-email }}" 
        git config --local user.name "${{ inputs.commit-user-name }}"
        git checkout -b release/v$VERSION 
        printf "# frozen_string_literal: true\n\nmodule ${{ inputs.version-module-name }}\n  VERSION = '$VERSION'\nend\n" > ${{ inputs.version-file-path }}
        git add ${{ inputs.version-file-path }}
        git commit -m "chore: bump version to v$VERSION"
        git push origin release/v$VERSION
      shell: bash
    - name: Create Pull Request
      if: ${{ steps.changelog.outputs.skipped == 'false' }}
      env:
        GH_TOKEN: ${{ env.GITHUB_TOKEN }}
      run: |
        gh pr create --title "chore: Release version to v${{ steps.changelog.outputs.version }}" --body "${{ steps.changelog.outputs.clean_changelog }}" --base ${{ inputs.base-branch }} --head release/v${{ steps.changelog.outputs.version }}
      shell: bash
